/**
 * This class file was automatically generated by jASN1 (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.iso.acse;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jasn1.ber.BerIdentifier;
import org.openmuc.jasn1.ber.BerLength;
import org.openmuc.jasn1.ber.types.BerBitString;
import org.openmuc.jasn1.ber.types.BerInteger;
import org.openmuc.jasn1.ber.types.BerObjectIdentifier;
import org.openmuc.jasn1.ber.types.string.BerGraphicString;

public final class AARQ_apdu {

	public final static BerIdentifier identifier = new BerIdentifier(BerIdentifier.APPLICATION_CLASS,
			BerIdentifier.CONSTRUCTED, 0);
	protected BerIdentifier id;

	public byte[] code = null;
	public BerBitString protocol_version = null;

	public BerObjectIdentifier application_context_name = null;

	public AP_title called_AP_title = null;

	public AE_qualifier called_AE_qualifier = null;

	public BerInteger called_AP_invocation_identifier = null;

	public BerInteger called_AE_invocation_identifier = null;

	public AP_title calling_AP_title = null;

	public AE_qualifier calling_AE_qualifier = null;

	public BerInteger calling_AP_invocation_identifier = null;

	public BerInteger calling_AE_invocation_identifier = null;

	public BerBitString sender_acse_requirements = null;

	public BerObjectIdentifier mechanism_name = null;

	public Authentication_value calling_authentication_value = null;

	public Application_context_name_list application_context_name_list = null;

	public BerGraphicString implementation_information = null;

	public Association_information user_information = null;

	public AARQ_apdu() {
		id = identifier;
	}

	public AARQ_apdu(byte[] code) {
		id = identifier;
		this.code = code;
	}

	public AARQ_apdu(BerBitString protocol_version, BerObjectIdentifier application_context_name,
			AP_title called_AP_title, AE_qualifier called_AE_qualifier, BerInteger called_AP_invocation_identifier,
			BerInteger called_AE_invocation_identifier, AP_title calling_AP_title, AE_qualifier calling_AE_qualifier,
			BerInteger calling_AP_invocation_identifier, BerInteger calling_AE_invocation_identifier,
			BerBitString sender_acse_requirements, BerObjectIdentifier mechanism_name,
			Authentication_value calling_authentication_value,
			Application_context_name_list application_context_name_list, BerGraphicString implementation_information,
			Association_information user_information) {
		id = identifier;
		this.protocol_version = protocol_version;
		this.application_context_name = application_context_name;
		this.called_AP_title = called_AP_title;
		this.called_AE_qualifier = called_AE_qualifier;
		this.called_AP_invocation_identifier = called_AP_invocation_identifier;
		this.called_AE_invocation_identifier = called_AE_invocation_identifier;
		this.calling_AP_title = calling_AP_title;
		this.calling_AE_qualifier = calling_AE_qualifier;
		this.calling_AP_invocation_identifier = calling_AP_invocation_identifier;
		this.calling_AE_invocation_identifier = calling_AE_invocation_identifier;
		this.sender_acse_requirements = sender_acse_requirements;
		this.mechanism_name = mechanism_name;
		this.calling_authentication_value = calling_authentication_value;
		this.application_context_name_list = application_context_name_list;
		this.implementation_information = implementation_information;
		this.user_information = user_information;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			int sublength;

			if (user_information != null) {
				codeLength += user_information.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30))
						.encode(os);
			}

			if (implementation_information != null) {
				codeLength += implementation_information.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 29)).encode(os);
			}

			if (application_context_name_list != null) {
				codeLength += application_context_name_list.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13))
						.encode(os);
			}

			if (calling_authentication_value != null) {
				sublength = calling_authentication_value.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12))
						.encode(os);
			}

			if (mechanism_name != null) {
				codeLength += mechanism_name.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 11)).encode(os);
			}

			if (sender_acse_requirements != null) {
				codeLength += sender_acse_requirements.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 10)).encode(os);
			}

			if (calling_AE_invocation_identifier != null) {
				sublength = calling_AE_invocation_identifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)).encode(os);
			}

			if (calling_AP_invocation_identifier != null) {
				sublength = calling_AP_invocation_identifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)).encode(os);
			}

			if (calling_AE_qualifier != null) {
				sublength = calling_AE_qualifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)).encode(os);
			}

			if (calling_AP_title != null) {
				sublength = calling_AP_title.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)).encode(os);
			}

			if (called_AE_invocation_identifier != null) {
				sublength = called_AE_invocation_identifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)).encode(os);
			}

			if (called_AP_invocation_identifier != null) {
				sublength = called_AP_invocation_identifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)).encode(os);
			}

			if (called_AE_qualifier != null) {
				sublength = called_AE_qualifier.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)).encode(os);
			}

			if (called_AP_title != null) {
				sublength = called_AP_title.encode(os, true);
				codeLength += sublength;
				codeLength += BerLength.encodeLength(os, sublength);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)).encode(os);
			}

			sublength = application_context_name.encode(os, true);
			codeLength += sublength;
			codeLength += BerLength.encodeLength(os, sublength);
			codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 1)).encode(os);

			if (protocol_version != null) {
				codeLength += protocol_version.encode(os, false);
				codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 0)).encode(os);
			}

			codeLength += BerLength.encodeLength(os, codeLength);
		}

		if (explicit) {
			codeLength += id.encode(os);
		}

		return codeLength;

	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("sequence: {");
		boolean firstSelectedElement = true;
		if (protocol_version != null) {
			sb.append("protocol_version: ").append(protocol_version);
			firstSelectedElement = false;
		}

		if (!firstSelectedElement) {
			sb.append(", ");
		}
		sb.append("application_context_name: ").append(application_context_name);

		if (called_AP_title != null) {
			sb.append(", ");
			sb.append("called_AP_title: ").append(called_AP_title);
		}

		if (called_AE_qualifier != null) {
			sb.append(", ");
			sb.append("called_AE_qualifier: ").append(called_AE_qualifier);
		}

		if (called_AP_invocation_identifier != null) {
			sb.append(", ");
			sb.append("called_AP_invocation_identifier: ").append(called_AP_invocation_identifier);
		}

		if (called_AE_invocation_identifier != null) {
			sb.append(", ");
			sb.append("called_AE_invocation_identifier: ").append(called_AE_invocation_identifier);
		}

		if (calling_AP_title != null) {
			sb.append(", ");
			sb.append("calling_AP_title: ").append(calling_AP_title);
		}

		if (calling_AE_qualifier != null) {
			sb.append(", ");
			sb.append("calling_AE_qualifier: ").append(calling_AE_qualifier);
		}

		if (calling_AP_invocation_identifier != null) {
			sb.append(", ");
			sb.append("calling_AP_invocation_identifier: ").append(calling_AP_invocation_identifier);
		}

		if (calling_AE_invocation_identifier != null) {
			sb.append(", ");
			sb.append("calling_AE_invocation_identifier: ").append(calling_AE_invocation_identifier);
		}

		if (sender_acse_requirements != null) {
			sb.append(", ");
			sb.append("sender_acse_requirements: ").append(sender_acse_requirements);
		}

		if (mechanism_name != null) {
			sb.append(", ");
			sb.append("mechanism_name: ").append(mechanism_name);
		}

		if (calling_authentication_value != null) {
			sb.append(", ");
			sb.append("calling_authentication_value: ").append(calling_authentication_value);
		}

		if (application_context_name_list != null) {
			sb.append(", ");
			sb.append("application_context_name_list: ").append(application_context_name_list);
		}

		if (implementation_information != null) {
			sb.append(", ");
			sb.append("implementation_information: ").append(implementation_information);
		}

		if (user_information != null) {
			sb.append(", ");
			sb.append("user_information: ").append(user_information);
		}

		sb.append("}");
		return sb.toString();
	}

	public int decode(InputStream is, boolean explicit) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerIdentifier berIdentifier = new BerIdentifier();

		if (explicit) {
			codeLength += id.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		codeLength += length.val;

		subCodeLength += berIdentifier.decode(is);
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 0)) {
			protocol_version = new BerBitString();
			subCodeLength += protocol_version.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 1)) {
			subCodeLength += new BerLength().decode(is);
			application_context_name = new BerObjectIdentifier();
			subCodeLength += application_context_name.decode(is, true);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
			subCodeLength += new BerLength().decode(is);
			called_AP_title = new AP_title();
			int choiceDecodeLength = called_AP_title.decode(is, null);
			if (choiceDecodeLength != 0) {
				subCodeLength += choiceDecodeLength;
				if (subCodeLength == length.val) {
					return codeLength;
				}
				subCodeLength += berIdentifier.decode(is);
			}
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
			subCodeLength += new BerLength().decode(is);
			called_AE_qualifier = new AE_qualifier();
			int choiceDecodeLength = called_AE_qualifier.decode(is, null);
			if (choiceDecodeLength != 0) {
				subCodeLength += choiceDecodeLength;
				if (subCodeLength == length.val) {
					return codeLength;
				}
				subCodeLength += berIdentifier.decode(is);
			}
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
			subCodeLength += new BerLength().decode(is);
			called_AP_invocation_identifier = new BerInteger();
			subCodeLength += called_AP_invocation_identifier.decode(is, true);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
			subCodeLength += new BerLength().decode(is);
			called_AE_invocation_identifier = new BerInteger();
			subCodeLength += called_AE_invocation_identifier.decode(is, true);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
			subCodeLength += new BerLength().decode(is);
			calling_AP_title = new AP_title();
			int choiceDecodeLength = calling_AP_title.decode(is, null);
			if (choiceDecodeLength != 0) {
				subCodeLength += choiceDecodeLength;
				if (subCodeLength == length.val) {
					return codeLength;
				}
				subCodeLength += berIdentifier.decode(is);
			}
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
			subCodeLength += new BerLength().decode(is);
			calling_AE_qualifier = new AE_qualifier();
			int choiceDecodeLength = calling_AE_qualifier.decode(is, null);
			if (choiceDecodeLength != 0) {
				subCodeLength += choiceDecodeLength;
				if (subCodeLength == length.val) {
					return codeLength;
				}
				subCodeLength += berIdentifier.decode(is);
			}
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
			subCodeLength += new BerLength().decode(is);
			calling_AP_invocation_identifier = new BerInteger();
			subCodeLength += calling_AP_invocation_identifier.decode(is, true);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
			subCodeLength += new BerLength().decode(is);
			calling_AE_invocation_identifier = new BerInteger();
			subCodeLength += calling_AE_invocation_identifier.decode(is, true);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 10)) {
			sender_acse_requirements = new BerBitString();
			subCodeLength += sender_acse_requirements.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 11)) {
			mechanism_name = new BerObjectIdentifier();
			subCodeLength += mechanism_name.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
			subCodeLength += new BerLength().decode(is);
			calling_authentication_value = new Authentication_value();
			int choiceDecodeLength = calling_authentication_value.decode(is, null);
			if (choiceDecodeLength != 0) {
				subCodeLength += choiceDecodeLength;
				if (subCodeLength == length.val) {
					return codeLength;
				}
				subCodeLength += berIdentifier.decode(is);
			}
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
			application_context_name_list = new Application_context_name_list();
			subCodeLength += application_context_name_list.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 29)) {
			implementation_information = new BerGraphicString();
			subCodeLength += implementation_information.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)) {
			user_information = new Association_information();
			subCodeLength += user_information.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
		}
		throw new IOException(
				"Unexpected end of sequence, length tag: " + length.val + ", actual sequence length: " + subCodeLength);

	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}
}
